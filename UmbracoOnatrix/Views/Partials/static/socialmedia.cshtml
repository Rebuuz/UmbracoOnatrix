@using Umbraco.Cms.Web.Common.PublishedModels;
@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage
@inject Umbraco.Cms.Web.Common.UmbracoHelper UmbracoHelper
@{
    var rootContents = UmbracoHelper.ContentAtRoot();
    var settings = rootContents?.FirstOrDefault(x => x.ContentType.Alias == "settingsPage") ?? null;
    var socialMediaPlatforms = settings?.Value<IEnumerable<Umbraco.Cms.Core.Models.Blocks.BlockListItem>>("socialMediaPlatforms") ?? null;
}

@if(socialMediaPlatforms != null)
{
    <div class="socialmedia">
        @foreach (var social in socialMediaPlatforms) 
        {
            var platformName = social?.Content?.Value<string>("platformName");
            var platformLinkUrl = social?.Content?.Value<string>("platformLinkUrl") ?? "#";

            switch(platformName.ToLower()) 
            {
                case "facebook":
                <a href="@platformLinkUrl" title="@platformLinkUrl" target="_blank" class="socialmedia-item"><i class="fa-brands fa-facebook"></i></a>
                break;
                case "linkedin":
                <a href="@platformLinkUrl" title="@platformLinkUrl" target="_blank" class="socialmedia-item"><i class="fa-brands fa-linkedin"></i></a>
                break;
                case "x (formerly twitter)":
                <a href="@platformLinkUrl" title="@platformLinkUrl" target="_blank" class="socialmedia-item"><i class="fa-brands fa-x-twitter"></i></a>
                break;
            }
        }
    </div>
}